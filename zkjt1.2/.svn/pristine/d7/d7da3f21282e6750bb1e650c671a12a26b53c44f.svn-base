package com.zcareze.zkyandroidweb.devicepulgin;

import android.bluetooth.BluetoothGatt;
import android.bluetooth.BluetoothGattCharacteristic;
import android.bluetooth.BluetoothGattDescriptor;
import android.bluetooth.BluetoothGattService;
import android.content.Context;

import com.zcareze.domain.regional.dictionary.MeterModes;
import com.zcareze.zkyandroidweb.utils.L;

import java.util.Arrays;
import java.util.List;
import java.util.UUID;

/**
 * 源代码: Lxw
 * 伊妹儿: China2021@126.com
 * 时间轴: 2017 年 01 月 05 日 09 : 49
 */

public class ChaoSiScales extends BaseBlePlugin {

    private static final UUID SERVICE_UUID = UUID.fromString("ba11f08c-5f14-0b0d-1070-007cbe21d77c");
    private static final UUID CHARACTERISTIC_UUID = UUID.fromString("0000cd04-0000-1000-8000-00805f9b34fb");

    public ChaoSiScales(Context context, String mac, List<MeterModes> meterModes) {
        this.context = context;
        this.macAddress = mac;
        this.meterModes = meterModes;
    }


    @Override
    public void onServicesDiscovered(BluetoothGatt gatt, int status) {
        if (status == BluetoothGatt.GATT_SUCCESS && gatt != null) {
            List<BluetoothGattService> services = gatt.getServices();
            for (BluetoothGattService service : services) {
                L.d("ServiceUUID: " + service.getUuid().toString() + "---------------------------");
                List<BluetoothGattCharacteristic> characteristics = service.getCharacteristics();
                for (BluetoothGattCharacteristic characteristic : characteristics) {
                    L.d("Characteristic: " + characteristic.getUuid().toString());
                    if ((characteristic.getProperties() | BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {
                        gatt.setCharacteristicNotification(characteristic, true);
                        L.d("订阅能订阅的数据!");
                    }
                }
            }
            //打开数据通道
//            BluetoothGattCharacteristic characteristic = gatt.getService(SERVICE_UUID).getCharacteristic(CHARACTERISTIC_UUID);
//            if (characteristic != null && (characteristic.getProperties() | BluetoothGattCharacteristic.PROPERTY_NOTIFY) > 0) {
//                gatt.setCharacteristicNotification(characteristic, true);
//                L.d("订阅体重数据通道");
//            }
        }
    }

    @Override
    public void onCharacteristicRead(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, int status) {

    }

    @Override
    public void onCharacteristicChanged(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic) {
        L.d("体重数据: " + Arrays.toString(characteristic.getValue()));
    }

    @Override
    public void onDescriptorWrite(BluetoothGatt gatt, BluetoothGattDescriptor descriptor, int status) {

    }
}
